/////////////////////////////////////
// THIS FILE WAS AUTO GENERATED
// DO NOT EDIT THIS FILE DIRECTLY
/////////////////////////////////////

import { v4 as uuid } from "uuid";

import { ObjectType, Field, ID } from "@nestjs/graphql";
import { UuidExample as PrismaUuidExample } from "@prisma/client";

export type UuidExampleConstructor = {
  id?: string | null;
};

@ObjectType({ isAbstract: true })
export class BaseUuidExample implements PrismaUuidExample {
  @Field(() => ID, { nullable: false })
  readonly id: string;

  constructor(model: UuidExampleConstructor) {
    this.id = model.id ?? uuid();
  }

  static fromPrisma(data: PrismaUuidExample): BaseUuidExample {
    return new BaseUuidExample(data);
  }

  /**
   * Removes all relational fields from the model
   * so you can use it to create or update a record of this model
   * @returns PrismaUuidExample
   */
  toPrisma(): PrismaUuidExample {
    const { ...entity } = this;
    return entity;
  }
}

export { PrismaUuidExample };
