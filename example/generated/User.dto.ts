/////////////////////////////////////
// THIS FILE WAS AUTO GENERATED
// DO NOT EDIT THIS FILE DIRECTLY
/////////////////////////////////////

import { Field, InputType, ID, Int } from "@nestjs/graphql";

import { IsEmail, IsDate, MaxDate, IsIP } from "class-validator";
import { UserConstructor } from "./User.model";
import { PaginatorInputs } from "./paginator";

@InputType()
export class UserCreateInput implements UserConstructor {
  @Field(() => ID, { nullable: true })
  id?: string;

  @IsEmail()
  @Field(() => String!, { nullable: false })
  email!: string;

  @Field(() => String, { nullable: true })
  passwordHash?: string;

  @Field(() => Int!, { nullable: false })
  tokenVersion!: number;

  @IsDate()
  @MaxDate(new Date())
  @Field(() => Date, { nullable: true })
  lastLoginAt?: Date;

  @IsIP()
  @Field(() => String!, { nullable: false })
  createdIP!: string;
}

@InputType()
export class UserUpdateInput {
  @Field(() => ID!, { nullable: false })
  id!: string;

  @Field(() => String, { nullable: true })
  email?: string;

  @Field(() => Date, { nullable: true })
  lastLoginAt?: Date;
}

@InputType()
export class UserWhereInput {
  @Field(() => ID, { nullable: true })
  id?: string;

  @Field(() => String, { nullable: true })
  email?: string;

  @Field(() => Date, { nullable: true })
  lastLoginAt?: Date;
}

@InputType()
export class UserPaginatorInput extends PaginatorInputs {}
