/////////////////////////////////////
// THIS FILE WAS AUTO GENERATED
// DO NOT EDIT THIS FILE DIRECTLY
/////////////////////////////////////

import GraphQLJSON from "graphql-type-json";

import { ObjectType, Field, ID } from "@nestjs/graphql";
import { Prisma, JSONExample as PrismaJSONExample } from "@prisma/client";

export type JSONExampleConstructor = {
  id: number;
  jsonCol: Prisma.JsonValue;
};

@ObjectType()
export class BaseJSONExample implements PrismaJSONExample {
  @Field(() => ID, { nullable: false })
  readonly id: number;

  @Field(() => GraphQLJSON!, { nullable: false })
  jsonCol: Prisma.JsonValue;

  constructor(model: JSONExampleConstructor) {
    this.id = model.id;
    this.jsonCol = model.jsonCol;
  }

  static fromPrisma(data: PrismaJSONExample): BaseJSONExample {
    return new BaseJSONExample(data);
  }

  // this method removes all relational fields from the entity, and returns the base PrismaModel
  toPrisma(): PrismaJSONExample {
    const { ...entity } = this;
    return entity;
  }
}

export { PrismaJSONExample };
